---
title: How to easily contribute to your composer depnedencies
categories: php
tags: php composer open-source
---

1. Fork the repository you want to update
2. Create a branch in your repository (eg. "fix-foo"), choose one that's not already in use.
3. Add your fork to your composer.json

```json
...
    "repositories": [
        {
            "type": "vcs",
            "url": "https://github.com/<username>/<repo name>"
        }
    ]
...
```

NOTE: Don't update the `"require"` block, it will still point to the original `<vendor>/<repo name>`.

4. Install your fork from source:

```bash
composer require --prefer-source <vendor>/<repo name>:dev-<branch name>
```

5. Install the dependencies

```bash
cd vendor/<vendor>/<repo name>
composer install
```

6. Do your planned changes, you can test them in the context of your project.

7. Run the projects tests, linters and analysers to ensure you didn't break anything
   (you did write tests for you change right??).

8. Add, commit and push your changes.

9. Now you can submit a pull request to the project and feel all warm and fuzzy inside.


Keeping your fork up to date

1. Close your project somewhere less temporary than your vendor directory.
2. Add the upstream remote:

```bash
git remote add upstream https://github.com/<vendor>/<repo name>.git
```

3. Update your master branch to be inline with the upstream

```bash
git checkout master
git fetch upstream
git merge upstream/master
```

NOTE: You'll have to do this for every branch you want to keep up to date.
For example, the project might have a `develop` branch as their main branch, instead of master.

NOTE II: You should ALWAYS create a new branch for you work. If you use any branches that already
exist in the project, you will get merge conflicts and you won't be able to keep your fork in sync.



## Links

* https://snippets.khromov.se/composer-use-your-own-fork-for-a-package/
* https://stackoverflow.com/q/13498519/1393498
* https://stackoverflow.com/q/40914114/1393498
